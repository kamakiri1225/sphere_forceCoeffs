/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;
verbose yes;

// basketball r = 0.125m
//r_in    0.128;
r_ami   0.148;
a_out   1.5;
ma_out #calc "-$a_out";

x_in    -2.5;
x_out   2.5;

geometry
{
    ami
    {
        type   sphere;
        origin (0 0 0);
        radius $r_ami;
    }
}


n    24;
t    48;
n_in  6;
n_out 6;

v  #calc "1.0/sqrt(3.0)";
a  #calc "1.0/sqrt(2.0)";
 
 v_ami #calc "$r_ami*$v";
mv_ami #calc "-$v_ami";
 a_ami #calc "$r_ami*$a";
ma_ami #calc "-$a_ami";

vertices
(
    ($mv_ami $mv_ami $mv_ami) // 0
    ( $v_ami $mv_ami $mv_ami) // 1
    ( $v_ami  $v_ami $mv_ami) // 2
    ($mv_ami  $v_ami $mv_ami) // 3
    ($mv_ami $mv_ami  $v_ami) // 4
    ( $v_ami $mv_ami  $v_ami) // 5
    ( $v_ami  $v_ami  $v_ami) // 6
    ($mv_ami  $v_ami  $v_ami) // 7

    ($ma_out $ma_out $ma_out) // 8
    ( $a_out $ma_out $ma_out) // 9
    ( $a_out  $a_out $ma_out) // 10
    ($ma_out  $a_out $ma_out) // 11
    ($ma_out $ma_out  $a_out) // 12
    ( $a_out $ma_out  $a_out) // 13
    ( $a_out  $a_out  $a_out) // 14
    ($ma_out  $a_out  $a_out) // 15

    ($x_in  $ma_out $ma_out) // 16
    ($x_in   $a_out $ma_out) // 17
    ($x_in   $a_out  $a_out) // 18
    ($x_in  $ma_out  $a_out) // 19

    ($x_out  $ma_out $ma_out) // 20
    ($x_out   $a_out $ma_out) // 21
    ($x_out   $a_out  $a_out) // 22
    ($x_out  $ma_out  $a_out) // 23
);

blocks
(
    hex ( 9  8 12 13  1  0  4  5) ($n $n $t) simpleGrading (1 1 0.01)
    hex (10  9 13 14  2  1  5  6) ($n $n $t) simpleGrading (1 1 0.01)
    hex (11 10 14 15  3  2  6  7) ($n $n $t) simpleGrading (1 1 0.01)
    hex ( 8 11 15 12  0  3  7  4) ($n $n $t) simpleGrading (1 1 0.01)
    hex ( 8  9 10 11  0  1  2  3) ($n $n $t) simpleGrading (1 1 0.01)
    hex (13 12 15 14  5  4  7  6) ($n $n $t) simpleGrading (1 1 0.01)

    hex (11  8 12 15 17 16 19 18) ($n $n $n_in) simpleGrading (1 1 1)
    hex (21 20 23 22 10  9 13 14) ($n $n $n_out) simpleGrading (1 1 1)
);

edges
(
    arc  0  1 (0 $ma_ami $ma_ami) // 12
    arc  2  3 (0 $a_ami $ma_ami)
    arc  6  7 (0 $a_ami $a_ami)
    arc  4  5 (0 $ma_ami $a_ami)

    arc  0  3 ($ma_ami 0 $ma_ami) // 16
    arc  1  2 ($a_ami 0 $ma_ami)
    arc  5  6 ($a_ami 0 $a_ami)
    arc  4  7 ($ma_ami 0 $a_ami)

    arc  0  4 ($ma_ami $ma_ami 0) // 20
    arc  1  5 ($a_ami $ma_ami 0)
    arc  2  6 ($a_ami $a_ami 0)
    arc  3  7 ($ma_ami $a_ami 0)
);

faces
(
    project (0 4 7 3) ami
    project (2 6 5 1) ami
    project (1 5 4 0) ami
    project (3 7 6 2) ami
    project (0 3 2 1) ami
    project (4 5 6 7) ami
);

boundary
(
    out_wall
    {
        type patch;
        faces
        (
            ( 9 13 12  8)
            (11 15 14 10)
            ( 8 11 10  9)
            (8 16 19 12)
            (12 19 18 15)
            (15 18 17 11)
            (11 17 16 8)
            (9 20 23 13)
            (13 23 22 14)
            (14 22 21 10)
            (10 21 20 9)
            (15 12 13 14)
        );
    }

    out_to_in
    {
        type wall;
        faces
        (
            (0 4 7 3) 
            (2 6 5 1) 
            (1 5 4 0) 
            (3 7 6 2) 
            (0 3 2 1) 
            (4 5 6 7) 
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (17 16 19 18) 
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (21 20 23 22) 
        );
    }
);

// ************************************************************************* //
